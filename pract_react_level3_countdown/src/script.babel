/*ВСПОМНИМ УСЛОВИЕ ЗАДАЧИ
Реализуйте обратный отсчёт до заданной даты — вашего дня рождения.
*/
  
const second = 1000
const minute = second * 60
const hour = minute * 60
const day = hour * 24

class App extends React.Component {
  constructor(props) {
    super(props)
    this.state = {
    	days: 0,
      hours: 0,
      minutes: 0,
      seconds: 0,
      isInFuture: true
    }
  }
  
  componentDidMount() {
  	const countDown = setInterval(() => {
			const myBirthday = new Date('Aug 15, 2020 00:00:00').getTime()
      const now = new Date().getTime()
      const distance = myBirthday - now

			//when date is reached
      if (distance < 0) {
        clearInterval(countDown)
        this.setState({
        	isInFuture: false
        })
        alert("IT'S MY BIRTHDAY!")
      } else {
      	const days = Math.floor(distance / (day))
        const hours = Math.floor((distance % (day)) / (hour))
        const minutes = Math.floor((distance % (hour)) / (minute))
        const seconds = Math.floor((distance % (minute)) / second)

        this.setState({
          days,
          hours,
          minutes,
          seconds
        })
      }
    }, second)
  }
  
  render() {
  	const {days, hours, minutes, seconds} = this.state
    return (
      <div className="main-container">
        <h1 className="title">To my birthday:</h1>
        <div className="counter">
          <div className="clock-part">
            <span className="number">{days}</span>days
          </div>
          <div className="clock-part">
            <span className="number">{hours}</span>Hours
          </div>
          <div className="clock-part">
            <span className="number">{minutes}</span>Minutes
          </div>
          <div className="clock-part">
            <span className="number">{seconds}</span>Seconds
          </div>
        </div>
        <div className="birthday-emoji">🎉</div>
      </div>
    )
  }
}

ReactDOM.render(<App />, document.querySelector("#app"))